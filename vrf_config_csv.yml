- name: Configure device
  hosts: nso
  connection: local
  gather_facts: no
 
  tasks:
  - name: NSO global variables
    include_vars:
      file: nso.yaml
      name: nso

  - name: Service variables in CSV file
    read_csv:
      path: vrf_vars_2.csv
      #key: vrf_name
    register: vrf
    delegate_to: localhost

  - name: VRF Configuration
    nso_config:
      url: "{{ nso.url }}"
      username: "{{ nso.username }}"
      password: "{{ nso.password }}"
      data:
        tailf-ncs:services:
          vrf:vrf:
            - name: "{{ item.vrf_name }}"
              devices:
              - device: "{{ item.router }}"
                primary_route_target: "{{ item.rt_primary }}"
                RT_export:
                - "{{ item.rt_import }}"
                RT_import:
                - "{{ item.rt_export }}"
    loop: "{{ vrf.list }}"
  # - name: print
  #   debug:
  #     msg: "{{ item.router }}"
  #   loop: "{{ vrf.list }}"


  - name: VRF Route MAP Configuration
    nso_config:
      url: "{{ nso.url }}"
      username: "{{ nso.username }}"
      password: "{{ nso.password }}"
      data:
        tailf-ncs:services:
          vrf:vrf:
            - name: "{{ item.vrf_name }}"
              devices:
              - device: "{{ item.router }}"
                iosxe:
                  route_map_export: "{{ item.rm_export }}"
                  route_map_import: "{{ item.rm_import }}"
                
    loop: "{{ vrf.list }}"
    when: "item.tipo  == 'iosxe'"

  - name: VRF Route MAP Configuration
    nso_config:
      url: "{{ nso.url }}"
      username: "{{ nso.username }}"
      password: "{{ nso.password }}"
      data:
        tailf-ncs:services:
          vrf:vrf:
            - name: "{{ item.vrf_name }}"
              devices:
              - device: "{{ item.router }}"
                iosxr:
                  route_map_export: "{{ item.rm_export }}"
                  route_map_import: "{{ item.rm_import }}"
                
    loop: "{{ vrf.list }}"
    when: "item.tipo  == 'iosxr'"